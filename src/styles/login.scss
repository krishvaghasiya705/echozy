@import "../styles/variables";

.login-page {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(135deg, #1e1e2f 0%, #2d1b35 100%);
  text-align: center;
  position: relative;
  overflow: hidden;

  h1 {
    color: $text-color;
    font-size: 48px;
    font-weight: 700;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    background: linear-gradient(90deg, #fff, #1db954, #fff);
    background-size: 200% auto;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: shine 5s linear infinite;

    &::after {
      content: "";
      display: block;
      width: 50px;
      height: 4px;
      background: $primary-color;
      margin: 0 auto;
      border-radius: 2px;
    }
  }

  .Login-button {
    display: flex;
    background-color: $primary-color;
    border: 2px solid $primary-color;
    color: $text-color;
    padding: 12px 32px;
    text-align: center;
    vertical-align: middle;
    align-items: center;
    border-radius: 10px;
    gap: 15px;
    cursor: pointer;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: 0.4s ease-in-out;
    font-size: 16px;
    transform: translateY(0);
    animation: pulse 2s infinite;

    span {
      font-size: 16px;
      font-weight: 600;
      line-height: 20px;
      color: $text-color;
      transition: 0.4s ease-in-out;
    }

    svg {
      transition: 0.4s ease-in-out;
      height: 30px;
      path {
        transition: 0.4s ease-in-out;
      }
    }
    &:hover {
      box-shadow: none;
      background-color: $text-color;
      transform: translateY(-2px);
      border-color: $text-color;

      span {
        color: $primary-color;
      }

      svg {
        path {
          fill: $primary-color;
        }
      }
    }

    &:active {
      transform: translateY(0);
    }
  }

  // Add floating particles
  .particle {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    animation: float 8s infinite;
    pointer-events: none;

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        $size: random(20) + 5px;
        width: $size;
        height: $size;
        left: random(100) * 1%;
        animation-delay: random(8000) * -1ms;
        animation-duration: (random(20) + 10) * 1s;
      }
    }
  }

  .music-notes-main {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;

    .music-note {
      position: absolute;
      color: rgba(255, 255, 255, 0.3);
      cursor: pointer;
      transition: all 0.3s ease-out;
      will-change: transform;
      user-select: none;
      pointer-events: auto;
      
      // Create a 4x2 grid layout for better distribution
      @for $i from 1 through 8 {
        $row: floor(($i - 1) / 4);
        $col: ($i - 1) % 4;
        
        &:nth-child(#{$i}) {
          left: #{$col * 25% + random(10) + 5%};
          top: #{$row * 50% + random(10) + 5%};
          font-size: #{20 + random(20)}px;
          opacity: 0.4 + random(3) * 0.2;
          z-index: #{$i};
          animation: 
            moveNote#{$i} #{15 + random(10)}s infinite ease-in-out,
            floatNote#{$i} #{6 + random(4)}s infinite ease-in-out alternate;
          animation-delay: #{random(5) * -1}s;
        }
      }

      &:hover {
        color: rgba(255, 255, 255, 0.9);
        transform: scale(1.3) rotate(15deg);
        z-index: 100;
      }
    }
  }
}

// Generate unique movement patterns for each note
@for $i from 1 through 8 {
  @keyframes moveNote#{$i} {
    0%, 100% {
      transform: translate(0, 0) rotate(0deg);
    }
    25% {
      transform: translate(#{20 + random(40)}px, #{20 + random(30)}px) rotate(#{random(90)}deg);
    }
    50% {
      transform: translate(#{-20 - random(30)}px, #{30 + random(40)}px) rotate(#{-random(90)}deg);
    }
    75% {
      transform: translate(#{-10 - random(20)}px, #{-20 - random(30)}px) rotate(#{random(90)}deg);
    }
  }

  @keyframes floatNote#{$i} {
    0% {
      transform: translateY(0) scale(1);
    }
    100% {
      transform: translateY(#{-15 - random(15)}px) scale(#{1 + random(3) * 0.1});
    }
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-100px) rotate(180deg);
  }
}

@keyframes floatNote {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

@keyframes shine {
  to {
    background-position: 200% center;
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(29, 185, 84, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(29, 185, 84, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(29, 185, 84, 0);
  }
}
